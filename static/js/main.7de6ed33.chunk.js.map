{"version":3,"sources":["shared/baseUrl.js","components/LoadingComponent.js","components/MenuComponent.js","components/Navbar.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/CommentFormComponent.js","components/DishdetailComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["baseUrl","Loading","className","RenderMenuItem","dish","onClick","Card","Body","to","id","CardImg","width","height","src","image","alt","name","CardBody","CardTitle","style","color","CardFooter","Button","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","NavbarComponent","useState","isOpen","setIsOpen","Navbar","backgroundColor","variant","light","expand","NavbarBrand","fontStyle","href","NavbarToggler","Collapse","navbar","Nav","NavItem","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","outline","toggleModal","marginTop","Header","state","isModalOpen","bind","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Fragment","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","innerRef","input","check","Component","Footer","RenderCard","item","designation","CardSubtitle","CardText","description","seeAll","Home","dishesLoading","dishesErrMess","leaders","leadersLoading","err","leadersErr","promotion","promoLoading","promoErrMess","Contact","firstName","lastName","telNumber","email","agreeToContact","contactType","message","touched","telNumberber","handleSubmit","values","console","log","JSON","stringify","postFeedBack","resetFeedbackForm","required","val","length","maxLength","len","minLength","model","Row","md","Col","text","placeholder","validators","show","messages","isNumber","isNaN","Number","validEmail","test","size","offset","checkbox","select","textarea","role","CommentForm","postComment","dishId","rating","author","comment","rows","DishDetail","paddingTop","paddingBottom","top","CardHeader","Badge","price","marginLeft","comments","cmnts","ListGroupItem","ListGroupItemHeading","Intl","DateTimeFormat","year","month","day","format","Date","date","ListGroupItemText","ListGroup","RenderComments","marginBottom","About","leader","Media","left","marginRight","body","heading","title","list","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","addLeaders","leadersFailed","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","fetch","then","response","ok","error","Error","status","statusText","json","catch","actions","reset","newComment","toISOString","method","headers","credentials","addComment","newFeedBack","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","agree","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wVAAaA,EAAU,yBCEVC,EAAU,WACnB,OACI,yBAAKC,UAAU,sBACX,0BAAMA,UAAU,oDAChB,8CCDRC,EAAiB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAoB,EAAdC,QAC5B,OACE,kBAACC,EAAA,EAAD,CAAMC,MAAI,GACR,kBAAC,IAAD,CAAMC,GAAE,gBAAWJ,EAAKK,KACxB,kBAACC,EAAA,EAAD,CAASC,MAAM,OAAOC,OAAO,QAAQC,IAAKb,EAAUI,EAAKU,MAAOC,IAAKX,EAAKY,OACxE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,MAAO,CAAEC,MAAO,QAAUlB,UAAU,eAC7C,4BACGE,EAAKY,QAIZ,kBAACK,EAAA,EAAD,CAAYnB,UAAU,eACpB,kBAACoB,EAAA,EAAD,gBA0DKC,EAnDF,SAACC,GACZ,IAAMC,EAAOD,EAAME,OAAOA,OAAOC,KAAI,SAACvB,GACpC,OACE,yBAAKwB,IAAKxB,EAAKK,GAAIP,UAAU,0BAC3B,kBAAC,EAAD,CAAgBE,KAAMA,EAAMC,QAASmB,EAAMnB,cAIjD,OAAImB,EAAME,OAAOG,UAEb,yBAAK3B,UAAU,aACb,yBAAKA,UAAU,OACb,kBAAC,EAAD,QAKCsB,EAAME,OAAOI,QAElB,yBAAK5B,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,4BAAKsB,EAAME,OAAOI,YAQxB,yBAAK5B,UAAU,aACb,yBAAKA,UAAU,OACb,kBAAC6B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAiB,kBAAC,IAAD,CAAMxB,GAAG,SAAT,SACjB,kBAACwB,EAAA,EAAD,CAAgBC,QAAM,GAAtB,SAEF,yBAAK/B,UAAU,UACb,oCACA,+BAGJ,yBAAKA,UAAU,OACZuB,K,2GCCIS,EAtDS,SAACV,GAAW,IAAD,EACHW,oBAAS,GADN,mBACxBC,EADwB,KAChBC,EADgB,KAI/B,OACI,6BACI,kBAACC,EAAA,EAAD,CAAQnB,MAAO,CAAEoB,gBAAiB,UAAWnB,MAAO,WAAaoB,QAAQ,OAAOC,OAAK,EAACC,OAAO,MACzF,kBAACC,EAAA,EAAD,CAAaxB,MAAO,CAAEC,MAAO,UAAWwB,UAAW,UAAYC,KAAK,KAChE,yBAAKhC,IAAK,yBAA0BD,OAAO,KAAKD,MAAM,MAAMI,IAAI,qBAEpE,kBAAC+B,EAAA,EAAD,CAAezC,QAPZ,kBAAMgC,GAAWD,MAQpB,kBAACW,EAAA,EAAD,CAAUX,OAAQA,EAAQY,QAAM,GAC5B,kBAACC,EAAA,EAAD,CAAK/C,UAAU,UAAU8C,QAAM,GAC3B,kBAACE,EAAA,EAAD,KACI,kBAAC,IAAD,CAAShD,UAAU,WAAUM,GAAG,QAAQW,MAAO,CAAEC,MAAO,YAAxD,SAEJ,kBAAC8B,EAAA,EAAD,KACI,kBAAC,IAAD,CAAShD,UAAU,WAAUM,GAAG,QAAQW,MAAO,CAAEC,MAAO,YAAxD,SAEJ,kBAAC8B,EAAA,EAAD,KACI,kBAAC,IAAD,CAAShD,UAAU,WAAUM,GAAG,SAASW,MAAO,CAAEC,MAAO,YAAzD,UAEJ,kBAAC8B,EAAA,EAAD,KACI,kBAAC,IAAD,CAAShD,UAAU,WAAUM,GAAG,WAAWW,MAAO,CAAEC,MAAO,YAA3D,eAEJ,kBAAC+B,EAAA,EAAD,CAAsBhC,MAAO,CAAEoB,gBAAiB,WAAaa,KAAG,EAACC,UAAQ,GACrE,kBAACC,EAAA,EAAD,CAAgBnC,MAAO,CAAEoB,gBAAiB,UAAWnB,MAAO,WAAagC,KAAG,EAACG,OAAK,GAAlF,cAGA,kBAACC,EAAA,EAAD,CAAcC,OAAK,GACf,kBAACC,EAAA,EAAD,kBAGA,kBAACA,EAAA,EAAD,oBAGA,kBAACA,EAAA,EAAD,kBAMZ,kBAACT,EAAA,EAAD,CAAK/C,UAAU,UAAU8C,QAAM,GAC3B,kBAACE,EAAA,EAAD,KACI,kBAAC5B,EAAA,EAAD,CAAQqC,SAAO,EAACtD,QAASmB,EAAMoC,YAAazC,MAAO,CAAEC,MAAO,UAAWyC,UAAU,QAAS,0BAAM3D,UAAU,wBAA1G,gB,wECgBb4D,E,kDAlEb,WAAYtC,GAAQ,IAAD,8BACjB,cAAMA,IACDuC,MAAQ,CACXC,aAAa,GAEf,EAAKJ,YAAc,EAAKA,YAAYK,KAAjB,gBACnB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBANF,E,0DASjBE,KAAKC,SAAS,CACZJ,aAAcG,KAAKJ,MAAMC,gB,kCAGjBK,GACVF,KAAKP,cACLU,MAAM,aAAeH,KAAKI,SAASC,MAAQ,cAAgBL,KAAKM,SAASD,MACnE,cAAgBL,KAAKO,SAASC,SACpCN,EAAMO,mB,+BAIE,IAAD,OAEP,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,CAAiBjB,YAAaO,KAAKP,cACnC,kBAACkB,EAAA,EAAD,KACE,yBAAK5E,UAAU,aACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mBACb,+CACA,yLAKR,kBAAC6E,EAAA,EAAD,CAAO3C,OAAQ+B,KAAKJ,MAAMC,YAAagB,OAAQb,KAAKP,aAClD,kBAACqB,EAAA,EAAD,CAAaD,OAAQb,KAAKP,aAA1B,SACA,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,SAAUjB,KAAKD,aACnB,kBAACmB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,QAAQ,YAAf,YACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAOhF,GAAG,WAAWO,KAAK,WACpC0E,SAAU,SAACC,GAAD,OAAW,EAAKpB,SAAWoB,MAEzC,kBAACN,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,QAAQ,YAAf,YACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,WAAWhF,GAAG,WAAWO,KAAK,WACxC0E,SAAU,SAACC,GAAD,OAAW,EAAKlB,SAAWkB,MAEzC,kBAACN,EAAA,EAAD,CAAWO,OAAK,GACd,kBAACN,EAAA,EAAD,CAAOM,OAAK,GACV,kBAACJ,EAAA,EAAD,CAAOC,KAAK,WAAWzE,KAAK,WAC1B0E,SAAU,SAACC,GAAD,OAAW,EAAKjB,SAAWiB,KAFzC,gBAMF,kBAACrE,EAAA,EAAD,CAAQmE,KAAK,SAASjB,MAAM,SAASpD,MAAM,WAA3C,iB,GA1DOyE,aC0CNC,MA/Cf,SAAgBtE,GACZ,OACA,yBAAKtB,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,2BACX,qCACA,wBAAIA,UAAU,iBACV,4BAAI,kBAAC,IAAD,CAAMM,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,UAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,cAGZ,yBAAKN,UAAU,kBACX,2CACA,yDACiB,6BADjB,0BAEmB,6BAFnB,QAGC,6BACL,uBAAGA,UAAU,sBAJT,kBAIgD,6BACpD,uBAAGA,UAAU,oBALT,kBAK8C,6BAClD,uBAAGA,UAAU,yBANT,KAMsC,uBAAG2C,KAAK,8BAAR,yBAI1C,yBAAK3C,UAAU,qCACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,uDAAwD2C,KAAK,uBAAsB,uBAAG3C,UAAU,uBAC7G,uBAAGA,UAAU,yDAAyD2C,KAAK,2CAA0C,uBAAG3C,UAAU,oBAClI,uBAAGA,UAAU,yDAAyD2C,KAAK,+BAA8B,uBAAG3C,UAAU,oBACtH,uBAAGA,UAAU,wDAAwD2C,KAAK,uBAAsB,uBAAG3C,UAAU,mBAC7G,uBAAGA,UAAU,uDAAuD2C,KAAK,uBAAsB,uBAAG3C,UAAU,mBAC5G,uBAAGA,UAAU,4CAA4C2C,KAAK,WAAU,uBAAG3C,UAAU,yBAIjG,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,YACX,kE,kBCjCpB,SAAS6F,EAAT,GAAmD,IAA7BC,EAA4B,EAA5BA,KAAMnE,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,QACnC,OAAID,EAEI,kBAAC,EAAD,MAGCC,EAED,4BAAKA,GAKL,kBAACxB,EAAA,EAAD,KACI,kBAACI,EAAA,EAAD,CAASE,OAAO,QAAQC,IAAKb,EAAUgG,EAAKlF,MAAOC,IAAKiF,EAAKhF,OAC7D,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,4BACK8E,EAAKhF,OAGbgF,EAAKC,YAAc,kBAACC,EAAA,EAAD,KAAeF,EAAKC,aAA8B,KACtE,kBAACE,EAAA,EAAD,KAAWH,EAAKI,cAEpB,kBAAC/E,EAAA,EAAD,CAAYnB,UAAU,gBAClB,kBAACoB,EAAA,EAAD,CAAQqC,SAAO,EAACvC,MAAM,aAClB,kBAAC,IAAD,CAAMZ,GAAIwF,EAAKK,QAAf,cA8BTC,MAtBf,SAAc9E,GACV,OACI,yBAAKtB,UAAU,aACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,qBACX,kBAAC6F,EAAD,CAAYC,KAAMxE,EAAMpB,KAAMyB,UAAWL,EAAM+E,cAAezE,QAASN,EAAMgF,iBAEjF,yBAAKtG,UAAU,qBACX,kBAAC6F,EAAD,CACIC,KAAMxE,EAAMiF,QACZ5E,UAAWL,EAAMkF,eACjBC,IAAKnF,EAAMoF,cAGnB,yBAAK1G,UAAU,qBACX,kBAAC6F,EAAD,CAAYC,KAAMxE,EAAMqF,UAAWhF,UAAWL,EAAMsF,aAAchF,QAASN,EAAMuF,mB,yBC6NtFC,G,kDAhRX,WAAYxF,GAAQ,IAAD,8BACf,cAAMA,IACDuC,MAAQ,CACTkD,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,MAAO,GACPC,gBAAgB,EAChBC,YAAa,OACbC,QAAS,GACTC,QAAS,CACLP,WAAW,EACXC,UAAU,EACVO,cAAc,EACdF,SAAS,IAIjB,EAAKG,aAAe,EAAKA,aAAazD,KAAlB,gBAlBL,E,yDAqBN0D,GACTC,QAAQC,IAAI,qBAAuBC,KAAKC,UAAUJ,IAClDrD,MAAM,qBAAuBwD,KAAKC,UAAUJ,IAC5CxD,KAAK3C,MAAMwG,aACPL,EAAOV,UACPU,EAAOT,SACPS,EAAOR,UACPQ,EAAOP,MACPO,EAAON,eACPM,EAAOL,YACPK,EAAOJ,SAEXpD,KAAK3C,MAAMyG,sB,+BAIL,IAAD,OACCC,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IACvDC,EAAY,SAACD,GAAD,OAAS,SAACH,GAAD,OAASA,GAAQA,EAAIC,QAAUE,IAG1D,OACI,yBAAKpI,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC6B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMxB,GAAG,SAAT,SAChB,kBAACwB,EAAA,EAAD,CAAgBC,QAAM,GAAtB,eAEJ,yBAAK/B,UAAU,UACX,0CACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACX,sDAEJ,yBAAKA,UAAU,mBACX,kBAAC,OAAD,CACIsI,MAAM,WACNpD,SAAU,SAACuC,GAAD,OAAY,EAAKD,aAAaC,KACxC,kBAACc,EAAA,EAAD,CAAKvI,UAAU,cACX,kBAACoF,EAAA,EAAD,CAAOC,QAAQ,YAAYmD,GAAI,GAA/B,cAGA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQE,KAAT,CACIJ,MAAM,aACNtI,UAAU,eACVO,GAAG,YACHO,KAAK,YACL6H,YAAY,aACZC,WAAY,CACRZ,WACAK,UAAWA,EAAU,GACrBF,UAAWA,EAAU,OAG7B,kBAAC,SAAD,CACInI,UAAU,cACVsI,MAAM,aACNO,KAAK,UACLC,SAAU,CACNd,SAAU,KACVK,UAAW,oCACXF,UACI,qDAKpB,kBAACI,EAAA,EAAD,CAAKvI,UAAU,cACX,kBAACoF,EAAA,EAAD,CAAOC,QAAQ,WAAWmD,GAAI,GAA9B,aAGA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQE,KAAT,CACIJ,MAAM,YACNtI,UAAU,eACVO,GAAG,WACHO,KAAK,WACL6H,YAAY,YACZC,WAAY,CACRZ,WACAK,UAAWA,EAAU,GACrBF,UAAWA,EAAU,OAG7B,kBAAC,SAAD,CACInI,UAAU,cACVsI,MAAM,YACNO,KAAK,UACLC,SAAU,CACNd,SAAU,KACVK,UAAW,oCACXF,UACI,qDAKpB,kBAACI,EAAA,EAAD,CAAKvI,UAAU,cACX,kBAACoF,EAAA,EAAD,CAAOC,QAAQ,YAAYmD,GAAI,GAA/B,eAGA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQE,KAAT,CACIJ,MAAM,aACNtI,UAAU,eACVO,GAAG,YACHO,KAAK,YACL6H,YAAY,cACZC,WAAY,CACRZ,WACAK,UAAWA,EAAU,GACrBF,UAAWA,EAAU,IACrBY,SAjGnB,SAACd,GAAD,OAAUe,MAAMC,OAAOhB,QAoGZ,kBAAC,SAAD,CACIjI,UAAU,cACVsI,MAAM,aACNO,KAAK,UACLC,SAAU,CACNd,SAAU,KACVK,UAAW,kCACXF,UACI,8CACJY,SAAU,kCAK1B,kBAACR,EAAA,EAAD,CAAKvI,UAAU,cACX,kBAACoF,EAAA,EAAD,CAAOC,QAAQ,QAAQmD,GAAI,GAA3B,UAGA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQE,KAAT,CACIJ,MAAM,SACNtI,UAAU,eACVO,GAAG,QACHO,KAAK,QACL6H,YAAY,SACZC,WAAY,CACRZ,WACAkB,WA9HjB,SAACjB,GAAD,MAAS,4CAA4CkB,KAAKlB,OAiIjD,kBAAC,SAAD,CACIjI,UAAU,cACVsI,MAAM,SACNO,KAAK,UACLC,SAAU,CACNd,SAAU,KACVkB,WAAY,4BAK5B,kBAACX,EAAA,EAAD,CAAKvI,UAAU,cACX,kBAACyI,EAAA,EAAD,CAAKD,GAAI,CAAEY,KAAM,EAAGC,OAAQ,IACxB,yBAAKrJ,UAAU,cACX,kBAACoF,EAAA,EAAD,CAAOM,OAAK,GACR,kBAAC,UAAQ4D,SAAT,CACIhB,MAAM,kBACNtI,UAAU,mBACVc,KAAK,mBAET,0DAIZ,kBAAC2H,EAAA,EAAD,CAAKD,GAAI,CAAEY,KAAM,EAAGC,OAAQ,IACxB,kBAAC,UAAQE,OAAT,CACIjB,MAAM,eACNxH,KAAK,cACLd,UAAU,gBACV,wCACA,6CAIZ,kBAACuI,EAAA,EAAD,CAAKvI,UAAU,cACX,kBAACoF,EAAA,EAAD,CAAOC,QAAQ,UAAUmD,GAAI,GAA7B,iBAGA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQgB,SAAT,CACIlB,MAAM,WACNtI,UAAU,eACVO,GAAG,UACHO,KAAK,UACL6H,YAAY,0BACZC,WAAY,CACRZ,cAGR,kBAAC,SAAD,CACIhI,UAAU,cACVsI,MAAM,WACNO,KAAK,UACLC,SAAU,CACNd,SAAU,UAK1B,kBAACO,EAAA,EAAD,CAAKvI,UAAU,cACX,kBAACyI,EAAA,EAAD,CAAKD,GAAI,CAAEY,KAAM,GAAIC,OAAQ,IACzB,kBAACjI,EAAA,EAAD,CAAQmE,KAAK,SAASrE,MAAM,WAA5B,sBAQpB,yBAAKlB,UAAU,mBACX,yBAAKA,UAAU,UACX,qDAEJ,yBAAKA,UAAU,+BACX,2CACA,yDACyB,6BADzB,0BAEyB,6BAFzB,QAGO,6BACH,uBAAGA,UAAU,gBAJjB,oBAIoD,6BAChD,uBAAGA,UAAU,cALjB,oBAKkD,6BAC9C,uBAAGA,UAAU,mBANjB,KAMwC,uBAAG2C,KAAK,sBAAR,uBANxC,IAM6F,+BAGjG,yBAAK3C,UAAU,+BACX,oDAEJ,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,YAAYyJ,KAAK,SAC5B,uBAAGA,KAAK,SAASzJ,UAAU,wCAAwC2C,KAAK,sBAAqB,uBAAG3C,UAAU,iBAA1G,SACA,uBAAGyJ,KAAK,SAASzJ,UAAU,qCAAqC2C,KAAK,iBAAgB,uBAAG3C,UAAU,iBAAlG,UACA,uBAAGyJ,KAAK,SAASzJ,UAAU,wCAAwC2C,KAAK,6BAA4B,uBAAG3C,UAAU,sBAAjH,kB,GAxQN2F,a,4DCAhBqC,GAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,GAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IA2H9CsB,GAzHf,kDACI,WAAYpI,GAAQ,IAAD,8BACf,cAAMA,IAEDuC,MAAQ,CACTC,aAAa,GAEjB,EAAKJ,YAAc,EAAKA,YAAYK,KAAjB,gBACnB,EAAKyD,aAAe,EAAKA,aAAazD,KAAlB,gBAPL,EADvB,0DAaQE,KAAKC,SAAS,CACVJ,aAAcG,KAAKJ,MAAMC,gBAdrC,mCAkBiB2D,GACTxD,KAAKP,cACLO,KAAK3C,MAAMqI,YAAY1F,KAAK3C,MAAMsI,OAAQnC,EAAOoC,OAAQpC,EAAOqC,OAAQrC,EAAOsC,WApBvF,+BAsBc,IAvBK3B,EAuBN,OACL,OACI,6BACI,yBAAKpI,UAAU,aACX,yBAAKA,UAAU,OACX,kBAACoB,EAAA,EAAD,CAAQqC,SAAO,EAACvC,MAAM,YAAYf,QAAS8D,KAAKP,aAC5C,0BAAM1D,UAAU,uBADpB,oBAOR,kBAAC6E,EAAA,EAAD,CAAO3C,OAAQ+B,KAAKJ,MAAMC,YAAagB,OAAQb,KAAKP,aAChD,kBAACqB,EAAA,EAAD,CAAaD,OAAQb,KAAKP,aAA1B,kBACA,kBAACsB,EAAA,EAAD,KACI,kBAAC,YAAD,CAAWE,SAAU,SAACuC,GAAD,OAAY,EAAKD,aAAaC,KAC/C,kBAACc,EAAA,EAAD,CAAKvI,UAAU,cACX,kBAACoF,EAAA,EAAD,CAAOC,QAAQ,SAASmD,GAAI,GAA5B,UACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQe,OAAT,CAAgBjB,MAAM,UAAU/H,GAAG,SAASO,KAAK,SAC7C6H,YAAY,SACZ3I,UAAU,eACV4I,WAAY,CACRZ,cAIJ,iCACA,4BAAQ1D,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,MAGJ,kBAAC,SAAD,CACItE,UAAU,cACVsI,MAAM,UACNO,KAAK,UACLC,SAAU,CACNd,SAAU,wBAM1B,kBAACO,EAAA,EAAD,CAAKvI,UAAU,cACX,kBAACoF,EAAA,EAAD,CAAOC,QAAQ,SAASmD,GAAI,GAA5B,aACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQE,KAAT,CAAcJ,MAAM,UAAU/H,GAAG,SAASO,KAAK,SAC3C6H,YAAY,YACZ3I,UAAU,eACV4I,WAAY,CACRZ,YAAUK,WA5EnCD,EA4EwD,EA5EhD,SAACH,GAAD,OAASA,GAAQA,EAAIC,QAAUE,IA4EqBD,UAAWA,GAAU,OAGhE,kBAAC,SAAD,CACInI,UAAU,cACVsI,MAAM,UACNO,KAAK,UACLC,SAAU,CACNd,SAAU,mBACVK,UAAW,sCACXF,UAAW,uCAK3B,kBAACI,EAAA,EAAD,CAAKvI,UAAU,cACX,kBAACoF,EAAA,EAAD,CAAOC,QAAQ,SAASmD,GAAI,GAA5B,WACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQgB,SAAT,CAAkBQ,KAAK,IAAI1B,MAAM,WAAW/H,GAAG,UAAUO,KAAK,UAC1D6H,YAAY,UACZ3I,UAAU,eACV4I,WAAY,CACRZ,eAGR,kBAAC,SAAD,CACIhI,UAAU,cACVsI,MAAM,WACNO,KAAK,UACLC,SAAU,CACNd,SAAU,wBAM1B,kBAAC5G,EAAA,EAAD,CAAQmE,KAAK,SAASjB,MAAM,SAASpD,MAAM,WAA3C,kBA/G5B,GAAiCyE,aCiClB,SAASsE,GAAW3I,GAC/B,GAAIA,EAAMK,UACN,OACI,yBAAK3B,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKX,GAAIsB,EAAMM,QACX,OACI,yBAAK5B,UAAU,aACX,yBAAKA,UAAU,OACX,4BAAKsB,EAAMM,WAKtB,GAAkB,MAAdN,EAAMpB,KAAa,CAExB,IAAIA,EAAOoB,EAAMpB,KACbyJ,EAAYrI,EAAMqI,YAC1B,OACI,yBAAK3J,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC6B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMxB,GAAG,SAAT,SAChB,kBAACwB,EAAA,EAAD,CAAgBC,QAAM,GAAET,EAAMpB,KAAKY,QAI3C,yBAAKd,UAAU,OACX,kBAACI,EAAA,EAAD,CAAMC,MAAI,EAACL,UAAU,uBACjB,kBAACQ,EAAA,EAAD,CAASS,MAAO,CAAEiJ,WAAY,OAAQC,cAAe,QAAUC,KAAG,EAAC3J,MAAM,OAAOE,IAAKb,EAAUI,EAAKU,MAAOC,IAAKX,EAAKY,OACrH,kBAACE,EAAA,EAAD,KACI,4BACKd,EAAKY,OAGd,8BAAUG,MAAO,CAAEkJ,cAAe,SAAWjK,EAAKgG,cAEtD,kBAAC9F,EAAA,EAAD,CAAMC,MAAI,EAACL,UAAU,WAAWiB,MAAO,CAAEiJ,WAAY,SACjD,kBAACG,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAOpJ,MAAM,QAAQhB,EAAKqK,OAC1B,4BAAQtJ,MAAO,CAACuJ,WAAY,UAA5B,QAEJ,kBAACzJ,EAAA,EAAD,KAEI,wBAAIf,UAAU,mBAAd,aAGA,kCAtFxB,SAAwByK,EAAUd,EAAaC,GAC3C,GAAgB,MAAZa,EACA,OAAQ,8BAEZ,IAAMC,EAAQD,EAAShJ,KAAI,SAAAsI,GACvB,OACI,kBAACY,GAAA,EAAD,CAAejJ,IAAKqI,EAAQxJ,IACxB,kBAACqK,GAAA,EAAD,KACI,kBAACN,GAAA,EAAD,KACKP,EAAQD,OADb,SAGK,IAAIe,KAAKC,eAAe,QAAS,CAC9BC,KAAM,UACNC,MAAO,OACPC,IAAK,YACNC,OAAO,IAAIC,KAAKpB,EAAQqB,SAGnC,kBAACC,GAAA,EAAD,KACKtB,EAAQA,aAKzB,OACI,kBAACuB,GAAA,EAAD,KACKZ,GA6DgBa,CAAejK,EAAMmJ,SAAUd,EAAazJ,EAAKK,MAG1D,kBAACY,EAAA,EAAD,CAAYF,MAAO,CAAEuK,aAAc,SAC/B,kBAAC,GAAD,CAAa5B,OAAQ1J,EAAKK,GAAIoJ,YAAaA,QAS/D,OACI,8B,cCIO8B,OA1Gf,SAAenK,GAEX,IAAMiF,EAAUjF,EAAMiF,QAAQ9E,KAAI,SAACiK,GAC/B,OACI,kBAACC,GAAA,EAAD,CAAO3L,UAAU,QACb,kBAAC2L,GAAA,EAAD,CAAOC,MAAI,EAACxB,KAAG,GACX,yBAAKzJ,IAAKb,EAAQ4L,EAAO9K,MAAOH,MAAM,QAAQC,OAAO,QAAQO,MAAO,CAAE4K,YAAa,QAAUhL,IAAK6K,EAAO5K,QAE7G,kBAAC6K,GAAA,EAAD,CAAOG,MAAI,GACP,kBAACH,GAAA,EAAD,CAAOI,SAAO,GACTL,EAAO5K,MAEZ,uBAAGG,MAAO,CAAEyB,UAAW,WAClBgJ,EAAO3F,aAEX2F,EAAOxF,iBAMxB,OAAI5E,EAAMkF,eAEF,yBAAKxG,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAILsB,EAAMoF,WAET,yBAAK1G,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,4BAAKsB,EAAMoF,eAOvB,yBAAK1G,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC6B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMxB,GAAG,SAAT,SAChB,kBAACwB,EAAA,EAAD,CAAgBC,QAAM,GAAtB,aAEJ,yBAAK/B,UAAU,UACX,wCACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,mBACX,2CACA,8YACA,oMAEJ,yBAAKA,UAAU,mBACX,kBAACI,EAAA,EAAD,KACI,kBAACiK,GAAA,EAAD,CAAYrK,UAAU,yBAAtB,qBACA,kBAACe,EAAA,EAAD,KACI,wBAAIf,UAAU,WACV,wBAAIA,UAAU,SAAd,WACA,wBAAIA,UAAU,SAAd,eACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,gBACA,wBAAIA,UAAU,SAAd,wBACA,wBAAIA,UAAU,SAAd,cACA,wBAAIA,UAAU,SAAd,aACA,wBAAIA,UAAU,SAAd,UAKhB,yBAAKA,UAAU,UACX,kBAACI,EAAA,EAAD,KACI,kBAACW,EAAA,EAAD,CAAUf,UAAU,YAChB,gCAAYA,UAAU,cAClB,uBAAGA,UAAU,QAAb,qFAEA,4BAAQA,UAAU,qBAAlB,cACJ,0BAAMgM,MAAM,gBAAZ,0DAQhB,yBAAKhM,UAAU,mBACX,yBAAKA,UAAU,UACX,qDAEJ,yBAAKA,UAAU,UACX,kBAAC2L,GAAA,EAAD,CAAOM,MAAI,GACN1F,O,SC/DhBF,GAAgB,iBAAO,CAChCd,KCrC0B,mBDwCjB2G,GAAe,SAACC,GAAD,MAAc,CACtC5G,KCxCyB,gBDyCzB6G,QAASD,IAGAE,GAAY,SAAC7K,GAAD,MAAa,CAClC+D,KC5CsB,aD6CtB6G,QAAS5K,IAyBA8K,GAAiB,SAACH,GAAD,MAAc,CACxC5G,KCjE2B,kBDkE3B6G,QAASD,IAGAI,GAAc,SAAC9B,GAAD,MAAe,CACtClF,KCvEwB,eDwExB6G,QAAS3B,IAoEA+B,GAAgB,iBAAO,CAChCjH,KCzI0B,mBD4IjBkH,GAAe,SAACN,GAAD,MAAc,CACtC5G,KC3IyB,gBD4IzB6G,QAASD,IAGAO,GAAY,SAACC,GAAD,MAAa,CAClCpH,KCjJsB,aDkJtB6G,QAASO,IA6BAC,GAAa,SAACrG,GAAD,MAAc,CACpChB,KC3KuB,cD4KvB6G,QAAS7F,IAMAsG,GAAgB,SAACpG,GAAD,MAAU,CACnClB,KClL0B,iBDmL1B6G,QAAS3F,IErJPqG,G,kLAIF7I,KAAK3C,MAAMyL,cACX9I,KAAK3C,MAAM0L,gBACX/I,KAAK3C,MAAM2L,cACXhJ,KAAK3C,MAAM4L,iB,+BAGH,IAAD,OAgCP,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKlN,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmN,KAAK,QAAQC,UApCX,WACf,OACE,kBAAC,EAAD,CACElN,KAAM,EAAKoB,MAAME,OAAOA,OAAO6L,QAAO,SAACnN,GAAD,OAAUA,EAAKoN,YAAU,GAC/DjH,cAAe,EAAK/E,MAAME,OAAOG,UACjC4L,YAAa,EAAKjM,MAAME,OAAOI,QAC/B+E,UAAW,EAAKrF,MAAMkM,WAAWA,WAAWH,QAAO,SAACI,GAAD,OAAWA,EAAMH,YAAU,GAC9E1G,aAAc,EAAKtF,MAAMkM,WAAW7L,UACpCkF,aAAc,EAAKvF,MAAMkM,WAAW5L,QAEpC2E,QACE,EAAKjF,MAAMiF,QAAQA,QAAQ8G,QACzB,SAAC3B,GAAD,OAAYA,EAAO4B,YACnB,GAEJ9G,eAAgB,EAAKlF,MAAMiF,QAAQ5E,UACnC+E,WAAY,EAAKpF,MAAMiF,QAAQE,SAsB7B,kBAAC,IAAD,CAAOiH,OAAK,EAACP,KAAK,QAAQC,UAAW,kBAAM,kBAAC,EAAD,CAAM5L,OAAQ,EAAKF,MAAME,YACpE,kBAAC,IAAD,CACEkM,OAAK,EACLP,KAAK,WACLC,UAAW,kBACT,kBAAC,GAAD,CACErF,kBAAmB,EAAKzG,MAAMyG,kBAC9BD,aAAc,EAAKxG,MAAMwG,kBAI/B,kBAAC,IAAD,CACE4F,OAAK,EACLP,KAAK,SACLC,UAAW,kBACT,kBAAC,GAAD,CACE7G,QAAS,EAAKjF,MAAMiF,QAAQA,QAC5BC,eAAgB,EAAKlF,MAAMiF,QAAQ5E,UACnC+E,WAAY,EAAKpF,MAAMiF,QAAQE,SAIrC,kBAAC,IAAD,CAAO0G,KAAK,gBAAgBC,UAxCjB,SAAC,GAAe,IAAbO,EAAY,EAAZA,MACpB,OACE,kBAAC1D,GAAD,CAAY/J,KAAM,EAAKoB,MAAME,OAAOA,OAAO6L,QAAO,SAACnN,GAAD,OAAUA,EAAKK,KAAOqN,SAASD,EAAME,OAAOjE,OAAQ,OAAK,GACzGjI,UAAW,EAAKL,MAAME,OAAOG,UAC7BC,QAAS,EAAKN,MAAME,OAAOI,QAC3B6I,SAAU,EAAKnJ,MAAMmJ,SAASA,SAAS4C,QAAO,SAACtD,GAAD,OAAaA,EAAQH,SAAWgE,SAASD,EAAME,OAAOjE,OAAQ,OAC5GkE,gBAAiB,EAAKxM,MAAMmJ,SAAS7I,QACrC+H,YAAa,EAAKrI,MAAMqI,iBAkCtB,kBAAC,IAAD,CAAUrJ,GAAG,YAIjB,kBAAC,EAAD,W,GA5EWqF,aAoFJoI,eAAWC,oBA1HF,SAAAnK,GACtB,MAAO,CACLrC,OAAQqC,EAAMrC,OACdiJ,SAAU5G,EAAM4G,SAChB+C,WAAY3J,EAAM2J,WAClBjH,QAAS1C,EAAM0C,YAGQ,SAAA0H,GAAQ,MAAK,CACtClB,YAAa,WAAQkB,GFNU,SAACA,GAI9B,OAFAA,EAAS5H,IAAc,IAEhB6H,MAAMpO,EAAU,UAClBqO,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMjH,YAGrC8G,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAA3M,GAAM,OAAIyM,EAAS5B,GAAU7K,OAClCmN,OAAM,SAAAL,GAAK,OAAIL,EAAS/B,GAAaoC,EAAMjH,iBEblDU,kBAAmB,WAAQkG,EAASW,UAAQC,MAAM,cAClD7B,cAAe,kBAAMiB,GF+BY,SAACA,GAChC,OAAOC,MAAMpO,EAAU,YAClBqO,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMjH,YAGrC8G,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAA1D,GAAQ,OAAIwD,EAAS1B,GAAY9B,OACtCkE,OAAM,SAAAL,GAAK,OAAIL,EAAS3B,GAAegC,EAAMjH,iBE/CpD4F,YAAa,kBAAMgB,GFsGY,SAACA,GAI9B,OAFAA,EAASzB,MAEF0B,MAAMpO,EAAU,cAClBqO,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMjH,YAGrC8G,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAxB,GAAM,OAAIsB,EAASvB,GAAUC,OAClCgC,OAAM,SAAAL,GAAK,OAAIL,EAASxB,GAAa6B,EAAMjH,iBEzHlDsC,YAAa,SAACC,EAAQC,EAAQC,EAAQC,GAAzB,OAAqCkE,EFgEzB,SAACrE,EAAQC,EAAQC,EAAQC,GAAzB,OAAqC,SAACkE,GAE7D,IAAMa,EAAa,CACflF,OAAQA,EACRC,OAAQA,EACRC,OAAQA,EACRC,QAASA,GAIb,OAFA+E,EAAW1D,MAAO,IAAID,MAAO4D,cAEtBb,MAAMpO,EAAU,WAAY,CAC/BkP,OAAQ,OACRlD,KAAMlE,KAAKC,UAAUiH,GACrBG,QAAS,CACL,eAAgB,oBAEpBC,YAAa,gBAEZf,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACI,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GAAQ,OAAIH,EApCA,SAAClE,GAAD,MAAc,CACpCxE,KC7EuB,cD8EvB6G,QAASrC,GAkCsBoF,CAAWf,OACrCO,OAAM,SAAAL,GAAW5G,QAAQC,IAAI,gBAAiB2G,EAAMjH,SAAUjD,MAAM,4CAA8CkK,EAAMjH,aEhGpEsC,CAAYC,EAAQC,EAAQC,EAAQC,KAC/FmD,aAAc,WACZe,GF0I8B,SAACA,GAC/B,OAAOC,MAAMpO,EAAU,WAClBqO,MACG,SAACC,GACG,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MACZ,QAAUH,EAASI,OAAS,IAAMJ,EAASK,YAG/C,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAACA,GAEG,MADmB,IAAIC,MAAMD,EAAMjH,YAI1C8G,MAAK,SAACC,GAAD,OAAcA,EAASM,UAC5BP,MAAK,SAAC5H,GAAD,OAAa0H,EAASrB,GAAWrG,OACtCoI,OAAM,SAACL,GAAD,OAAWL,EAASpB,GAAcyB,EAAMjH,iBE7JrDS,aAAc,SACZf,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAPY,OASZ4G,EF4K0B,SAC1BlH,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAP0B,OAQvB,SAAC4G,GACJ,IAAMmB,EAAc,CAClBrI,UAAWA,EACXC,SAAUA,EACVC,UAAWA,EACXC,MAAOA,EACPC,eAAgBA,EAChBC,YAAaA,EACbC,QAASA,GAKX,OAFA+H,EAAYhE,MAAO,IAAID,MAAQ4D,cAExBb,MAAOpO,EAAU,WAAY,CAClCkP,OAAQ,OACRlD,KAAMlE,KAAKC,UAAWuH,GACtBH,QAAS,CACP,eAAgB,oBAElBC,YAAa,gBAEZf,MACC,SAACC,GACC,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAO,SAAWH,EAASI,QAE3C,MADAF,EAAMF,SAAWA,EACXE,KAGV,SAACA,GAEC,MADU,IAAIC,MAAOD,EAAMjH,YAI9B8G,MAAM,SAACC,GAAD,OAAcA,EAASM,UAC7BP,MAAM,SAACC,GAAD,OAAcH,EAlDgB,CACvC1I,KCvLyB,gBDwLzB6G,QAgD+CgC,OAC5CO,OAAO,SAACL,GAAD,OAAW5G,QAAQC,IAAK,gBAAiB2G,EAAMjH,aEzNvDS,CACEf,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,QAwFkB2G,CAA6ClB,K,iBCrI1DuC,GAAS,WAEM,IAFLxL,EAEI,uDAFI,CAAElC,WAAW,EACxCC,QAAS,KACTJ,OAAO,IAAK8N,EAAW,uCACvB,OAAQA,EAAO/J,MACX,IFDkB,aEEd,OAAO,6BAAI1B,GAAX,IAAkBlC,WAAW,EAAOC,QAAS,KAAMJ,OAAQ8N,EAAOlD,UAEtE,IFNsB,iBEOlB,OAAO,6BAAIvI,GAAX,IAAkBlC,WAAW,EAAMC,QAAS,KAAMJ,OAAQ,KAE9D,IFRqB,gBESjB,OAAO,6BAAIqC,GAAX,IAAkBlC,WAAW,EAAOC,QAAS0N,EAAOlD,UAExD,QACI,OAAOvI,ICbN0L,GAAW,WAAoD,IAAnD1L,EAAkD,uDAA1C,CAAEjC,QAAS,KAAM6I,SAAS,IAAK6E,EAAW,uCACzE,OAAQA,EAAO/J,MACb,IHKwB,eGJtB,OAAO,6BAAI1B,GAAX,IAAkBjC,QAAS,KAAM6I,SAAU6E,EAAOlD,UAEpD,IHG2B,kBGFzB,OAAO,6BAAIvI,GAAX,IAAkBjC,QAAS0N,EAAOlD,UAEpC,IHFuB,cGGnB,IAAIrC,EAAUuF,EAAOlD,QACrB,OAAO,6BAAKvI,GAAZ,IAAmB4G,SAAU5G,EAAM4G,SAAS+E,OAAOzF,KAEvD,QACE,OAAOlG,ICbA4L,GAAa,WAE0C,IAFzC5L,EAEwC,uDAF/B,CAAElC,WAAW,EACTC,QAAS,KACT4L,WAAW,IAAK8B,EAAW,uCAC/D,OAAQA,EAAO/J,MACX,IJQkB,aIPlB,OAAO,6BAAI1B,GAAX,IAAkBlC,WAAW,EAAOC,QAAS,KAAM4L,WAAY8B,EAAOlD,UAEtE,IJIsB,iBIHlB,OAAO,6BAAIvI,GAAX,IAAkBlC,WAAW,EAAMC,QAAS,KAAM4L,WAAY,KAElE,IJGqB,gBIFjB,OAAO,6BAAI3J,GAAX,IAAkBlC,WAAW,EAAOC,QAAS0N,EAAOlD,UAExD,QACE,OAAOvI,ICdJ6L,GAAU,WAOjB,IANJ7L,EAMG,uDANK,CACNlC,WAAW,EACX8E,KAAK,EACLF,QAAS,IAEX+I,EACG,uCACH,OAAQA,EAAO/J,MACb,ILQuB,cKPrB,OAAO,6BAAK1B,GAAZ,IAAmBlC,WAAW,EAAO8E,IAAK,KAAMF,QAAS+I,EAAOlD,UAClE,ILK2B,kBKJzB,OAAO,6BAAKvI,GAAZ,IAAmBlC,WAAW,EAAM8E,IAAK,KAAMF,QAAS,KAC1D,ILK0B,iBKJxB,OAAO,6BAAK1C,GAAZ,IAAmBlC,WAAW,EAAO8E,IAAK6I,EAAOlD,QAAS7F,QAAS,KACrE,QACE,OAAO1C,I,+BClBA8L,GAAkB,CAC3BC,UAAW,GACXC,SAAU,GACVC,OAAQ,GACR5I,MAAO,GACP6I,OAAO,EACP3I,YAAa,OACbC,QAAS,ICFP2I,GCKYC,uBACVC,2BAAgB,cACZ1O,OAAQ6N,GACR5E,SAAU8E,GACV/B,WAAYiC,GACZlJ,QAASmJ,IACNS,sBAAY,CAEXC,SAAUT,OAGlBU,2BAAgBC,KAAOC,ODChBC,G,uKAdX,OACE,kBAAC,YAAD,CAAUR,MAAOA,IACb,yBAAKhQ,UAAU,OACb,kBAAC,GAAD,Y,GALM2F,aEME8K,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjD,MACvB,2D,qBCTNkD,IAASC,OACP,kBAAC,IAAD,KAEE,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,QAIHC,SAASC,eAAe,SDkHrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjD,MAAK,SAAAkD,GACJA,EAAaC,gBAEd3C,OAAM,SAAAL,GACL5G,QAAQ4G,MAAMA,EAAMjH,c","file":"static/js/main.7de6ed33.chunk.js","sourcesContent":["export const baseUrl = 'http://localhost:3001/';","import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12 text-center\"  >\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","import React from 'react';\nimport { Card, CardImg, CardBody, CardFooter, CardTitle, Button, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Loading } from './LoadingComponent';\nlet RenderMenuItem = ({ dish, onClick }) => {\n  return (\n    <Card Body >\n      <Link to={`/menu/${dish.id}`}>\n      <CardImg width=\"100%\" height=\"250px\" src={baseUrl + dish.image} alt={dish.name} />\n        <CardBody>\n          <CardTitle style={{ color: \"grey\" }} className=\"text-center\">\n            <h3>\n              {dish.name}\n            </h3>\n          </CardTitle>\n        </CardBody>\n        <CardFooter className=\"text-center\">\n          <Button >Add</Button>\n        </CardFooter>\n      </Link>\n\n    </Card>\n  );\n}\nconst Menu = (props) => {\n  const menu = props.dishes.dishes.map((dish) => {\n    return (\n      <div key={dish.id} className=\"col-md-6 col-lg-3 my-3\" >\n        <RenderMenuItem dish={dish} onClick={props.onClick} />\n      </div>\n    );\n  });\n  if (props.dishes.isLoading) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Loading />\n        </div>\n      </div>\n    );\n  }\n  else if (props.dishes.errMess) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <h4>{props.dishes.errMess}</h4>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  else\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Breadcrumb >\n            <BreadcrumbItem ><Link to=\"/home\">Home</Link></BreadcrumbItem>\n            <BreadcrumbItem active>Menu</BreadcrumbItem>\n          </Breadcrumb>\n          <div className=\"col-12\">\n            <h3>Menu</h3>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row\">\n          {menu}\n        </div>\n      </div>\n\n\n    );\n}\n\n\nexport default Menu;","import React, { useState } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem, Button\n} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nconst NavbarComponent = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n    return (\n        <div>\n            <Navbar style={{ backgroundColor: '#41444a', color: '#ffffff' }} variant=\"dark\" light expand=\"md\">\n                <NavbarBrand style={{ color: '#ffffff', fontStyle: \"italic\" }} href=\"/\">\n                    <img src={\"assets/images/logo.png\"} height=\"40\" width=\"100\" alt=\"Continuous Food\" />\n                </NavbarBrand>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    <Nav className=\"mr-auto\" navbar>\n                        <NavItem>\n                            <NavLink className=\"nav-link\"to=\"/home\" style={{ color: '#ffffff' }} >Home</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className=\"nav-link\"to=\"/menu\" style={{ color: '#ffffff' }} >Menu</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className=\"nav-link\"to=\"/about\" style={{ color: '#ffffff' }} >About</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className=\"nav-link\"to=\"/contact\" style={{ color: '#ffffff' }} >Contact Us</NavLink>\n                        </NavItem>\n                        <UncontrolledDropdown style={{ backgroundColor: '#41444a' }} nav inNavbar>\n                            <DropdownToggle style={{ backgroundColor: '#41444a', color: '#ffffff' }} nav caret>\n                                Categories\n              </DropdownToggle>\n                            <DropdownMenu right>\n                                <DropdownItem >\n                                    Beverages\n                </DropdownItem>\n                                <DropdownItem >\n                                    Lunch Items\n                </DropdownItem>\n                                <DropdownItem >\n                                    Dinner\n                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                    </Nav>\n                    <Nav className=\"ml-auto\" navbar>\n                        <NavItem>\n                            <Button outline onClick={props.toggleModal} style={{ color: '#ffffff', marginTop:\"5px\" }}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\n                        </NavItem>\n                    </Nav>\n\n                </Collapse>\n            </Navbar>\n        </div>\n    );\n}\n\nexport default NavbarComponent;","import React, { Component } from 'react';\nimport NavbarComponent from './Navbar';\nimport {\n  Jumbotron, Button, Modal, ModalHeader, ModalBody,\n  Form, FormGroup, Input, Label\n} from 'reactstrap';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false\n    }\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n  handleLogin(event) {\n    this.toggleModal();\n    alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n        + \" Remember: \" + this.remember.checked);\n    event.preventDefault();\n\n\n}\n  render() {\n    \n    return (\n      <React.Fragment>\n        <NavbarComponent toggleModal={this.toggleModal} />\n        <Jumbotron>\n          <div className=\"container\">\n            <div className=\"row row-header\">\n              <div className=\"col-12 col-sm-6\">\n                <h1>Continuous Food</h1>\n                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n              </div>\n            </div>\n          </div>\n        </Jumbotron>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.handleLogin}>\n              <FormGroup>\n                <Label htmlFor=\"username\">Username</Label>\n                <Input type=\"text\" id=\"username\" name=\"username\"\n                  innerRef={(input) => this.username = input} />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"password\">Password</Label>\n                <Input type=\"password\" id=\"password\" name=\"password\"\n                  innerRef={(input) => this.password = input} />\n              </FormGroup>\n              <FormGroup check>\n                <Label check>\n                  <Input type=\"checkbox\" name=\"remember\"\n                    innerRef={(input) => this.remember = input} />\n                                    Remember me\n                                </Label>\n              </FormGroup>\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\nimport {Link} from 'react-router-dom'\nfunction Footer(props) {\n    return(\n    <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to=\"/home\">Home</Link></li>\n                        <li><Link to=\"/menu\">Menu</Link></li>\n                        <li><Link to=\"/about\">Menu</Link></li>\n                        <li><Link to=\"/contact\">Contact</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Our Address</h5>\n                    <address>\n\t\t              121, Grand Trunk Road<br />\n\t\t              Near Desh Metro Station<br />\n\t\t              India<br />\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +91 1234 5678<br />\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +91 8765 4321<br />\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:continuous@food.net\">\n                         continuous@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-google redirect-social-media\"  href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                        <a className=\"btn btn-social-icon btn-facebook redirect-social-media\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin redirect-social-media\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter redirect-social-media\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google redirect-social-media\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        <a className=\"btn btn-social-icon redirect-social-media\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright Continuous Food</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport {\n    Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle, CardFooter, Button\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nfunction RenderCard({ item, isLoading, errMess }) {\n    if (isLoading) {\n        return (\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return (\n            <h4>{errMess}</h4>\n        );\n    }\n    else\n        return (\n            <Card >\n                <CardImg height=\"250px\" src={baseUrl + item.image} alt={item.name} />\n                <CardBody>\n                    <CardTitle>\n                        <h4>\n                            {item.name}\n                        </h4>\n                    </CardTitle>\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\n                    <CardText>{item.description}</CardText>\n                </CardBody>\n                <CardFooter className=\"text-center \">\n                    <Button outline color=\"secondary\">\n                        <Link to={item.seeAll} >See All</Link>\n                    </Button>\n                </CardFooter>\n            </Card>\n        );\n\n}\n\nfunction Home(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard\n                        item={props.leaders}\n                        isLoading={props.leadersLoading}\n                        err={props.leadersErr}\n                    />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors } from 'react-redux-form';\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            firstName: \"\",\n            lastName: \"\",\n            telNumber: \"\",\n            email: \"\",\n            agreeToContact: false,\n            contactType: \"Tel.\",\n            message: \"\",\n            touched: {\n                firstName: false,\n                lastName: false,\n                telNumberber: false,\n                message: false,\n            }\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n        this.props.postFeedBack(\n            values.firstName,\n            values.lastName,\n            values.telNumber,\n            values.email,\n            values.agreeToContact,\n            values.contactType,\n            values.message\n        )\n        this.props.resetFeedbackForm();\n    }\n\n\n    render() {\n        const required = (val) => val && val.length;\n        const maxLength = (len) => (val) => !(val) || (val.length <= len);\n        const minLength = (len) => (val) => val && (val.length >= len);\n        const isNumber = (val) => !isNaN(Number(val));\n        const validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form\n                            model=\"feedback\"\n                            onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>\n                                    First Name\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text\n                                        model=\".firstName\"\n                                        className=\"form-control\"\n                                        id=\"firstName\"\n                                        name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(15),\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstName\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: \"* \",\n                                            minLength: \"Must be greater than 2 characters\",\n                                            maxLength:\n                                                \"Must be lesser than or equal to 15 characters\",\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>\n                                    Last Name\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text\n                                        model=\".lastName\"\n                                        className=\"form-control\"\n                                        id=\"lastName\"\n                                        name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(15),\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: \"* \",\n                                            minLength: \"Must be greater than 2 characters\",\n                                            maxLength:\n                                                \"Must be lesser than or equal to 15 characters\",\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telNumber\" md={2}>\n                                    Tel. Number\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text\n                                        model=\".telNumber\"\n                                        className=\"form-control\"\n                                        id=\"telNumber\"\n                                        name=\"telNumber\"\n                                        placeholder=\"Tel. Number\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(15),\n                                            isNumber,\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telNumber\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: \"* \",\n                                            minLength: \"Must be greater than 2 numbers.\",\n                                            maxLength:\n                                                \"Must be lesser than or equal to 15 numbers.\",\n                                            isNumber: \" Invalid Telephone Number.\",\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>\n                                    E-mail\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text\n                                        model=\".email\"\n                                        className=\"form-control\"\n                                        id=\"email\"\n                                        name=\"email\"\n                                        placeholder=\"E-mail\"\n                                        validators={{\n                                            required,\n                                            validEmail,\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: \"* \",\n                                            validEmail: \"Invalid Email Adress\",\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 6, offset: 2 }}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agreeToContact\"\n                                                className=\"form-check-input\"\n                                                name=\"agreeToContact\"\n                                            />\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{ size: 3, offset: 1 }}>\n                                    <Control.select\n                                        model=\".contactType\"\n                                        name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>E-mail</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>\n                                    Your Feedback\n                  </Label>\n                                <Col md={10}>\n                                    <Control.textarea\n                                        model=\".message\"\n                                        className=\"form-control\"\n                                        id=\"message\"\n                                        name=\"message\"\n                                        placeholder=\"Type your message here.\"\n                                        validators={{\n                                            required,\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".message\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: \"* \",\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 12, offset: 2 }}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Grand Trunk Road<br />\n                          Near Desh Metro Station<br />\n                          India<br />\n                            <i className=\"fa fa-phone\"></i>: +91 12345 67810<br />\n                            <i className=\"fa fa-fax\"></i>: +91 10876 54321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"contunous@food.net\">continuous@food.net</a> <br/>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary redirect-social-media\" href=\"tel:+9100000000000\"><i className=\"fa fa-phone \"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info redirect-social-media\" href=\"www.skype.com\"><i className=\"fa fa-skype \"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success redirect-social-media\" href=\"mailto:contunous@food.net\"><i className=\"fa fa-envelope-o \"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Contact;","import React, { Component } from 'react'\nimport { Button, Modal, ModalHeader, ModalBody, Row, Col, Label } from 'reactstrap';\n\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nexport class CommentForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false\n        };\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Button outline color=\"secondary\" onClick={this.toggleModal}>\n                            <span className=\"fa fa-pencil fa-lg\"></span>\n                            Submit Comment\n                        </Button>\n                    </div>\n                </div>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"rating\" md={6}>Rating</Label>\n                                <Col md={12}>\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\n                                        placeholder=\"Rating\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required\n                                        }}\n\n                                    >\n                                        <option></option>\n                                        <option value=\"1\">1</option>\n                                        <option value=\"2\">2</option>\n                                        <option value=\"3\">3</option>\n                                        <option value=\"4\">4</option>\n                                        <option value=\"5\">5</option>\n                                    </Control.select>\n\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".rating\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required Field. ',\n\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"rating\" md={6}>Your Name</Label>\n                                <Col md={12}>\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                        placeholder=\"Your Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required Field. ',\n                                            minLength: 'Must be greater than 2 characters. ',\n                                            maxLength: 'Must be 15 characters or less. '\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"rating\" md={6}>Comment</Label>\n                                <Col md={12}>\n                                    <Control.textarea rows=\"6\" model=\".comment\" id=\"comment\" name=\"comment\"\n                                        placeholder=\"Comment\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".comment\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required Field. ',\n\n                                        }}\n                                    /> \n                                </Col>\n                            </Row>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n\n            </div>\n        )\n    }\n}\n\nexport default CommentForm;\n","import React from 'react'\nimport { Card, CardImg, CardBody, CardFooter, ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText, CardTitle, CardHeader, Badge, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport CommentForm from './CommentFormComponent';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nfunction RenderComments(comments, postComment, dishId) {\n    if (comments == null) {\n        return (<div></div>);\n    }\n    const cmnts = comments.map(comment => {\n        return (\n            <ListGroupItem key={comment.id}>\n                <ListGroupItemHeading>\n                    <Badge>\n                        {comment.author},\n                        &nbsp;\n                        {new Intl.DateTimeFormat('en-US', {\n                            year: 'numeric',\n                            month: 'long',\n                            day: '2-digit'\n                        }).format(new Date(comment.date))}\n                    </Badge>\n                </ListGroupItemHeading>\n                <ListGroupItemText>\n                    {comment.comment}\n                </ListGroupItemText>\n            </ListGroupItem>\n        );\n    })\n    return (\n        <ListGroup>\n            {cmnts}\n        </ListGroup>\n\n\n    )\n}\n\n\nexport default function DishDetail(props) {\n    if (props.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if (props.dish != null){\n\n        let dish = props.dish;\n        let postComment=props.postComment;\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                </Breadcrumb>\n                \n            </div>\n            <div className=\"row\">\n                <Card Body className=\"col-md-6 dish-image\">\n                    <CardImg style={{ paddingTop: '20px', paddingBottom: '30px' }} top width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                    <CardTitle>\n                        <h3>\n                            {dish.name}\n                        </h3>\n                    </CardTitle>\n                    <cardtext style={{ paddingBottom: '30px' }}>{dish.description}</cardtext>\n                </Card>\n                <Card Body className=\"col-md-6\" style={{ paddingTop: '20px' }}>\n                    <CardHeader >\n                        <Badge color=\"info\">{dish.price}</Badge>\n                        <button style={{marginLeft: \"350px\"}}>Add</button>\n                    </CardHeader>\n                    <CardBody>\n\n                        <h4 className=\"comments-header\">\n                            Comments:\n                        </h4>\n                        <cardtext>\n                            {RenderComments(props.comments, postComment, dish.id)}\n                        </cardtext>\n                    </CardBody>\n                    <CardFooter style={{ marginBottom: \"20px\" }}>\n                        <CommentForm dishId={dish.id} postComment={postComment} />\n                    </CardFooter>\n                </Card>\n            </div>\n        </div>\n\n    );\n\n} else {\n    return (\n        <div></div>\n    )\n}\n}\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Loading } from './LoadingComponent';\nfunction About(props) {\n\n    const leaders = props.leaders.map((leader) => {\n        return (\n            <Media className=\"mt-5\">\n                <Media left top >\n                    <img src={baseUrl+leader.image} width=\"100px\" height=\"100px\" style={{ marginRight: \"30px\" }} alt={leader.name} />\n                </Media>\n                <Media body>\n                    <Media heading>\n                        {leader.name}\n                    </Media>\n                    <p style={{ fontStyle: \"italic\" }}>\n                        {leader.designation}\n                    </p>\n                    {leader.description}\n                </Media>\n            </Media>\n        );\n    });\n\n    if (props.leadersLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        )\n    } else if (props.leadersErr) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h4>{props.leadersErr}</h4>\n                    </div>\n                </div>\n            </div>\n        )\n    } else\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>About Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-6\">\n                        <h2>Our History</h2>\n                        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. </p>\n                        <p>Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. </p>\n                    </div>\n                    <div className=\"col-12 col-md-5\">\n                        <Card>\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                            <CardBody>\n                                <dl className=\"row p-1\">\n                                    <dt className=\"col-6\">Started</dt>\n                                    <dd className=\"col-6\">1 Aug. 2019</dd>\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\n                                    <dd className=\"col-6\">Anil Bhimwal</dd>\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\n                                    <dd className=\"col-6\">$3,234,232</dd>\n                                    <dt className=\"col-6\">Employees</dt>\n                                    <dd className=\"col-6\">20</dd>\n                                </dl>\n                            </CardBody>\n                        </Card>\n                    </div>\n                    <div className=\"col-12\">\n                        <Card>\n                            <CardBody className=\"bg-faded\">\n                                <blockquote className=\"blockquote\">\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">Baba Gharwale ,\n                                Lorem ipsum dolor sit amet. 2014</cite>\n                                    </footer>\n                                </blockquote>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Corporate Leadership</h2>\n                    </div>\n                    <div className=\"col-12\">\n                        <Media list>\n                            {leaders}\n                        </Media>\n\n\n                    </div>\n                </div>\n            </div>\n        );\n}\n\nexport default About;    ","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n// Redux documentation standard, with good practices\n// Keep the actions in a separate file\n// and import them into the Creator, invoking them\n// as an object containing (type :) File.ACTION and inserting all\n// the data and information of that action in (payload :),\n// which functions as an array.map\n\n// Actions are sent to the ConfigureStore, where it is chosen\n// which state it will act in, and are also sent to the file\n// containing the state in which it will act.\n\n// MainComponent receives the actions from this file.\n//for dishes action creators\nexport const fetchDishes = () => (dispatch) => {// react thunk returning a function\n\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\n\n// COMMENTS\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                throw error;\n            })\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: ' + error.message); });\n};\n\n// PROMOTIONS\n\nexport const fetchPromos = () => (dispatch) => {\n\n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\n\n// LEADERS Action creators\nexport const fetchLeaders = () => (dispatch) => {\n    return fetch(baseUrl + \"leaders\")\n        .then(\n            (response) => {\n                if (response.ok) {\n                    return response\n                } else {\n                    var error = new Error(\n                        \"Error\" + response.status + \":\" + response.statusText\n                    )\n                    error.response = response\n                    throw error\n                }\n            },\n            (error) => {\n                var errorMessage = new Error(error.message) // if there is no response from the server.\n                throw errorMessage\n            }\n        )\n        .then((response) => response.json())\n        .then((leaders) => dispatch(addLeaders(leaders)))\n        .catch((error) => dispatch(leadersFailed(error.message)))\n}\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders,\n})\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING,\n})\n\nexport const leadersFailed = (err) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: err,\n})\n\n\n// FEEDBACK\n\nexport const userFeedBack = (feedback) => ({\n    type: ActionTypes.USER_FEEDBACK,\n    payload: feedback,\n  })\n  \n  export const postFeedBack = (\n    firstName,\n    lastName,\n    telNumber,\n    email,\n    agreeToContact,\n    contactType,\n    message\n  ) => (dispatch) => {\n    const newFeedBack = {\n      firstName: firstName,\n      lastName: lastName,\n      telNumber: telNumber,\n      email: email,\n      agreeToContact: agreeToContact,\n      contactType: contactType,\n      message: message,\n    }\n  \n    newFeedBack.date = new Date ().toISOString()\n  \n    return fetch (baseUrl + \"feedback\", {\n      method: \"POST\",\n      body: JSON.stringify (newFeedBack),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: \"same-origin\",\n    })\n      .then (\n        (response) => {\n          if (response.ok) {\n            return response\n          } else {\n            var error = new Error (\"Error:\" + response.status)\n            error.response = response\n            throw error\n          }\n        },\n        (error) => {\n          var err = new Error (error.message)\n          throw err\n        }\n      )\n      .then ((response) => response.json ())\n      .then ((response) => dispatch (userFeedBack (response)))\n      .catch ((error) => console.log (\"Post feedback\", error.message))\n  }","// Stores the actions of the entire project, to later be\n// sent to ActionCreators, just a form of good practice and organization\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\n\n\n\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\n\n\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\n\n\nexport const LEADERS_LOADING = \"LEADERS_LOADING\";\nexport const ADD_LEADERS = \"ADD_LEADERS\";\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";\n\n\nexport const USER_FEEDBACK = \"USER_FEEDBACK\";\nexport const POST_FEEDBACK = \"POST_COMMENT\"\n","import React, { Component } from 'react';\nimport Menu from './MenuComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent';\nimport Contact from './ContactComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport DishDetail from './DishdetailComponent';\nimport About from './AboutComponent';\nimport { connect } from 'react-redux';\nimport { postComment, fetchDishes, fetchComments, postFeedBack, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }\n}\nconst mapDispatchToProps = dispatch => ({\n  fetchDishes: () => { dispatch(fetchDishes()) },\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\n  fetchComments: () => dispatch(fetchComments()),\n  fetchPromos: () => dispatch(fetchPromos()),\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n  fetchLeaders: () => {\n    dispatch(fetchLeaders())\n  },\n  postFeedBack: (\n    firstName,\n    lastName,\n    telNumber,\n    email,\n    agreeToContact,\n    contactType,\n    message\n  ) =>\n    dispatch(\n      postFeedBack(\n        firstName,\n        lastName,\n        telNumber,\n        email,\n        agreeToContact,\n        contactType,\n        message\n      )\n    )\n});\nclass Main extends Component {\n\n\n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders()\n  }\n\n  render() {\n    const HomePage = () => {\n      return (\n        <Home\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n          dishesLoading={this.props.dishes.isLoading}\n          dishErrMess={this.props.dishes.errMess}\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n          promoLoading={this.props.promotions.isLoading}\n          promoErrMess={this.props.promotions.errMess}\n          ////////////////////////\n          leaders={\n            this.props.leaders.leaders.filter(\n              (leader) => leader.featured\n            )[0]\n          }\n          leadersLoading={this.props.leaders.isLoading}\n          leadersErr={this.props.leaders.err}\n        />\n      )\n    }\n    const DishWithId = ({ match }) => {\n      return (\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\n          isLoading={this.props.dishes.isLoading}\n          errMess={this.props.dishes.errMess}\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\n          commentsErrMess={this.props.comments.errMess}\n          postComment={this.props.postComment}\n        />\n      );\n    };\n    return (\n      <div>\n        <Header />\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/home\" component={HomePage} />\n            {/* using callback for passing the props  */}\n            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\n            <Route\n              exact\n              path=\"/contact\"\n              component={() => (\n                <Contact\n                  resetFeedbackForm={this.props.resetFeedbackForm}\n                  postFeedBack={this.props.postFeedBack}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/about\"\n              component={() => (\n                <About\n                  leaders={this.props.leaders.leaders}\n                  leadersLoading={this.props.leaders.isLoading}\n                  leadersErr={this.props.leaders.err}\n                />\n              )}\n            />\n            <Route path='/menu/:dishId' component={DishWithId} />\n            <Redirect to=\"/home\" />\n          </Switch>\n        </div>\n\n        <Footer />\n      </div>\n\n\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\nexport const Dishes = (state = { isLoading: true,\n    errMess: null,\n    dishes:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\n\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes: []}\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENTS:\n      return {...state, errMess: null, comments: action.payload};\n\n    case ActionTypes.COMMENTS_FAILED:\n      return {...state, errMess: action.payload};\n\n    case ActionTypes.ADD_COMMENT:\n        var comment = action.payload;\n        return { ...state, comments: state.comments.concat(comment)};\n\n    default:\n      return state;\n  }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state  = { isLoading: true,\n                                        errMess: null,\n                                        promotions:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []}\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n          return state;\n      }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (\n  state = {\n    isLoading: true,\n    err: false,\n    leaders: [],\n  },\n  action\n) => {\n  switch (action.type) {\n    case ActionTypes.ADD_LEADERS:\n      return { ...state, isLoading: false, err: null, leaders: action.payload }\n    case ActionTypes.LEADERS_LOADING:\n      return { ...state, isLoading: true, err: null, leaders: [] }\n    case ActionTypes.LEADERS_FAILED:\n      return { ...state, isLoading: false, err: action.payload, leaders: [] }\n    default:\n      return state\n  }\n}","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './components/MainComponent'\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nconst store = ConfigureStore();\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n          <div className=\"App\">\n            <Main />\n          </div>\n      </Provider>\n\n\n    )\n  }\n\n}\n\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { createForms } from 'react-redux-form';// gives a reducer\nimport { InitialFeedback } from './forms';\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({// writing like this to automatically bind the action creators of inbuit\n                //react-redux-forms\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n        \n\n    );\n\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>\n\n  ,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}